name: Test, Build, Release

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master','dev' ]

env:
  GH_REGISTRY: ghcr.io
  REPOSITORY_NAME: ${{ github.repository }}

jobs:

  # Build job runs on every PR into dev and master and pushes to master
  test:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.16.x ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test ./...

  # Build job runs on every PR into dev and master and pushes to master
  # Depends on test job
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: [ test ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push image to GHCR
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

  # Release job runs on every push to master
  # Depends on build job
  release:
    runs-on: ubuntu-latest
    name: Release
    if: github.ref == 'refs/heads/master'
    needs: [ build ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master
          pre_release_branches: pre-release

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}